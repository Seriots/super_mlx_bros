NEXT STEP:
x -> Collisions player map.
x -> Jump // application de la gravite en permanence
x -> collage au mur
x -> collage au sol
x -> deplacement continu , pas de stoquand gquch droite qppuyer en meme temps
x -> Parsing map objects
x -> Modification systeme de collision
x -> Make fps
x -> Collisions pas seulemnt sur la position futur de player mais sur le chemin pour arriver a la position
x -> Initialisation Objects
x -> Display objects
x -> collisions objects
	x-> Set la player hitbox
	x-> Sortir une liste de tout les objets potentiellement collide
	x-> verifier tout les objets reellement collide
	x-> applique la fonction de collision pour tout les objets collide
x -> refaire mes pieces
x -> animation objects
x -> fix crash when an image crash
x -> animation en fonction des fps
x -> Norm
x -> jump en fonction des fps
x -> fix segfault when player reach the top and the bottom of the map: top juste pas de display, bottom mort
x -> Gestion du Ctr+c pour no leak et keyautorepeat
x -> trouver les images du player
x -> initialiser toutes les images
x -> animer le player
-> faire une x_speed value pour faire un rendu fluide, implémenter des images de slide si la speedy va pas dans la même direction que l'orientation 
-> implementer l'end
-> apres c les ennemis hein
-> et apres le jeu est jouable

----------------------------------
-> fix jump when two key are pressed at the same time
-> Initialisations des images du joueur
-> Smooth fin de movement avec variable speed par direction
x -> Gestion jolie des free a l'initialisation si fail
-> Wall Jump
x -> Parsing des objets, et affichage des objest et collisions des objets
-> faire les ennemis
-> Initialisation de toutes les images du jeu.
-> List chainee de tout mes elements a redner: all_image, current_image, start_frame, position(x/y), fonction a applique sur l'objet, is_collide, fonction a applique sur la collision
-> List chainee de tout mes monstr a render: all_image, current_image, start_frame, position(x/y), fonction a applique sur l'objet,  is_collide, fonction a applique sur la collision
-> ./project || './mlx_keyrepeat_on' in terminal to dodge problem with segfault for the key repetition
-> Ralentissement de la gravite qaund colle a un mur
-> Faire en sorte de pouvoir sortir de la map par le haut pour un effet plus smooth
-> faire en sorte que les objects visible mais pas collide ni strong soit derrier le bg;
-> fix the problem when an object is 1px difference with a map wall
-> Empecher le deplacement horizontal en mode crouch mais le faire glisser

CHECK collisions
-> Need: POSITION OBJECT, size object, tout ce qui peut le mettre en collisions
-> Application le deplacement en y separement/avant du deplacement en x.


HOW TO INIT A NEW OBJECT:
-> smb_objects.h: add a define for the object tag (<= 5 char)
-> smb_objects.h: add some properties utils for the object
-> Init the object image(s) and add the image in the structure.
-> go in smb_init_objects and add comp to the new obj
-> create a init_files with the init fonction and the other associated fonction
-> add it to the .h
-> add it to the Makefile
-> RUN

HOW TO ANIM A NEW OBJECT:
-> define nbr of image, and a time duration 
```
Apply this:
	cur_frame = (game->current_frame - obj->start_frame) % obj->animation_duration;
	image_value = cur_frame / (obj->animation_duration / obj->nb_image);
	if (image_value >= obj->nb_image)
		image_value = obj->nb_image - 1;
	obj->img = &obj->all_img[image_value];
```
```
PLAYER:

anim duration, anim image start, anim image len	
```
